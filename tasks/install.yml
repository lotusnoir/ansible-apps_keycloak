---
- name: check if all required variables are set
  ansible.builtin.fail: msg="The variable keycloak_admin_password must be explicitly set"
  when: keycloak_admin_password is not defined

- name: Check for an existing deployment"
  ansible.builtin.stat:
    path: "{{ keycloak_jboss_home }}"
  register: existing_deploy

- name: "Install tasks"
  when: not existing_deploy.stat.exists or keycloak_force_install|bool
  block:
    - name: "REPLACE - Stop the old keycloak service"
      ansible.builtin.service:
        name: keycloak
        state: stopped
      failed_when: false
      when: existing_deploy.stat.exists and keycloak_force_install|bool

    - name: "REPLACE - Remove the old Keycloak deployment"
      ansible.builtin.file:
        path: "{{ keycloak_jboss_home }}"
        state: absent
      when: existing_deploy.stat.exists and keycloak_force_install|bool

    - name: "Install dependencies"
      ansible.builtin.package:
        name:
          - python3-openssl
          - ca-certificates
          - unzip
          - tar
        state: present

    - name: create Keycloak group
      ansible.builtin.group:
        name: "{{ keycloak_service_group }}"
        system: true

    - name: create Keycloak user
      ansible.builtin.user:
        name: "{{ keycloak_service_user }}"
        group: "{{ keycloak_service_group }}"
        home: "{{ keycloak_base_path }}"
        create_home: true
        system: true

    - name: extract Keycloak archive on target
      ansible.builtin.unarchive:
        remote_src: true
        src: "{{ keycloak_url }}"
        dest: "{{ keycloak_base_path }}"
        owner: "{{ keycloak_service_user }}"
        group: "{{ keycloak_service_group }}"

    - name: create postgres jdbc driver directory
      ansible.builtin.file:
        path: "{{ keycloak_jboss_home }}/modules/system/layers/keycloak/org/postgresql/main"
        owner: "{{ keycloak_service_user }}"
        group: "{{ keycloak_service_group }}"
        state: directory
        mode: 0755

    - name: download postgres jdbc driver
      ansible.builtin.get_url:
        url: "{{ keycloak_postgresql_jdbc_url }}"
        dest: "{{ keycloak_jboss_home }}/modules/system/layers/keycloak/org/postgresql/main/"
        owner: "{{ keycloak_service_user }}"
        group: "{{ keycloak_service_group }}"
        mode: 0644

    - name: Ensure keycloak profile-config exists
      ansible.builtin.file:
        path: "{{ keycloak_jboss_home }}/standalone/configuration/profile.properties"
        state: touch
        owner: "{{ keycloak_service_user }}"
        group: "{{ keycloak_service_group }}"
        modification_time: preserve
        access_time: preserve
        mode: 0644

    - name: create Keycloak admin user
      ansible.builtin.command:
        argv:
          - "{{ keycloak_jboss_home }}/bin/add-user-keycloak.sh"
          - -rmaster
          - -u{{ keycloak_admin_user }}
          - -p{{ keycloak_admin_password }}
        creates: "{{ keycloak_config_dir }}/keycloak-add-user.json"
      failed_when: false

    - name: "Configure certs"
      ansible.builtin.include_tasks: freeipa_certs.yml
      with_items: "{{ keycloak_freeipa_servers }}"
      when: keycloak_freeipa_servers is defined

- name: "Create postgres jdbc driver module.xml"
  ansible.builtin.template:
    src: "module.xml.j2"
    dest: "{{ keycloak_jboss_home }}/modules/system/layers/keycloak/org/postgresql/main/module.xml"
    owner: "{{ keycloak_service_user }}"
    group: "{{ keycloak_service_group }}"
    mode: 0644

- name: "Configure standalone-ha.xml"
  ansible.builtin.template:
    src: standalone-ha.xml.j2
    dest: "{{ keycloak_jboss_home }}/standalone/configuration/standalone-ha.xml"
    mode: 0644
  notify:
    - restart keycloak

- name: configure systemd unit file for keycloak service
  ansible.builtin.template:
    src: keycloak.service.j2
    dest: /etc/systemd/system/keycloak.service
    owner: root
    group: root
    mode: 0644
  notify:
    - reload systemd
    - restart keycloak
